"""Initial migration

Revision ID: 2a235e5342c1
Revises: 
Create Date: 2025-01-03 10:56:32.828825

"""

from typing import Sequence, Union

from alembic import op
from alembic import op
import sqlalchemy as sa
import sqlmodel  # Add this import


# revision identifiers, used by Alembic.
revision: str = "2a235e5342c1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "department",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "email_role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hmis_security_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "username", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("is_locked", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "log_traffic",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "ip_address", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False
        ),
        sa.Column("path", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "status", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False
        ),
        sa.Column("result", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("request_body", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "meal_request_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "meal_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "account",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "username", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False
        ),
        sa.Column(
            "password", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True
        ),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
        sa.Column("is_domain_user", sa.Boolean(), nullable=False),
        sa.Column("is_super_admin", sa.Boolean(), nullable=False),
        sa.Column("hmis_security_user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["hmis_security_user_id"],
            ["hmis_security_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "email",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "address", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False
        ),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["email_role.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("address"),
    )
    op.create_table(
        "employee",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(length=128), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["department.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "employee_shift",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("duration_hours", sa.Integer(), nullable=False),
        sa.Column("date_from", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "log_permission",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("admin_id", sa.Integer(), nullable=False),
        sa.Column(
            "action", sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False
        ),
        sa.Column("is_successful", sa.Boolean(), nullable=False),
        sa.Column("result", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["admin_id"],
            ["account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "meal_request",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column("requester_id", sa.Integer(), nullable=False),
        sa.Column("meal_type_id", sa.Integer(), nullable=False),
        sa.Column("request_time", sa.DateTime(), nullable=False),
        sa.Column("closed_time", sa.DateTime(), nullable=True),
        sa.Column("notes", sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
        sa.ForeignKeyConstraint(
            ["meal_type_id"],
            ["meal_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["requester_id"],
            ["account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["meal_request_status.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "role_permission",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "meal_request_line",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.Column("meal_request_id", sa.Integer(), nullable=False),
        sa.Column("attendance", sa.DateTime(), nullable=True),
        sa.Column("notes", sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
        sa.Column("is_accepted", sa.Boolean(), nullable=False),
        sa.Column("shift_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["department.id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.id"],
        ),
        sa.ForeignKeyConstraint(
            ["meal_request_id"],
            ["meal_request.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shift_id"],
            ["employee_shift.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "log_meal_request_line",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("meal_request_line_id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column(
            "action", sqlmodel.sql.sqltypes.AutoString(length=32), nullable=False
        ),
        sa.Column("is_successful", sa.Boolean(), nullable=False),
        sa.Column("result", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["meal_request_line_id"],
            ["meal_request_line.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("log_meal_request_line")
    op.drop_table("meal_request_line")
    op.drop_table("role_permission")
    op.drop_table("meal_request")
    op.drop_table("log_permission")
    op.drop_table("employee_shift")
    op.drop_table("employee")
    op.drop_table("email")
    op.drop_table("account")
    op.drop_table("role")
    op.drop_table("meal_type")
    op.drop_table("meal_request_status")
    op.drop_table("log_traffic")
    op.drop_table("hmis_security_user")
    op.drop_table("email_role")
    op.drop_table("department")
    # ### end Alembic commands ###
